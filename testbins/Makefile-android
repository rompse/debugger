# make -f Makefile-android to cross-compile on linux/macos

# you can override this with environment variable, depending on where your NDK is installed

# the naming convention here is <prog_name>_<target_triplet>
# where <target_triplet> is standard <machine>-<vendor>-<os>
# and vendor is omitted

# Android 5.0 and later only support position-independent executables (-fPIE)
# see also: -fPIC

NDK ?= $(HOME)/android-ndk-r15c

SYSR = $(NDK)/platforms/android-23/arch-arm
GCC = $(NDK)/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-gcc
AS = $(NDK)/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-as
LD = $(NDK)/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-ld

SYSR_64 = $(NDK)/platforms/android-23/arch-arm64
GCC_64 = $(NDK)/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin/aarch64-linux-android-gcc
AS_64 = $(NDK)/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin/aarch64-linux-android-as
LD_64 = $(NDK)/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin/aarch64-linux-android-ld

TARGETS_ARMV7 = helloworld_pie_armv7-android helloworld_loop_pie_armv7-android helloworld_thread_pie_armv7-android helloworld_recursion_pie_armv7-android do_exception_pie_armv7-android asmtest_armv7-android
TARGETS_AARCH64 = helloworld_pie_aarch64-android helloworld_loop_pie_aarch64-android helloworld_thread_pie_aarch64-android helloworld_recursion_pie_aarch64-android do_exception_pie_aarch64-android asmtest_aarch64-android
TARGETS_ALL = $(TARGETS_ARMV7) $(TARGETS_AARCH64)

# first target is default target when no target specified
all: $(TARGETS_ALL)

armv7: $(TARGETS_ARMV7)

aarch64: $(TARGETS_AARCH64)

push:
	adb push $(TARGETS_ALL) /data/local/tmp

clean:
	rm -rf $(TARGETS_ALL) *.o

#------------------------------------------------------------------------------
# armv7
#------------------------------------------------------------------------------
helloworld_pie_armv7-android: helloworld.c
	$(GCC) -march=armv7-a --sysroot=$(SYSR) -pie -DOS_IS_ANDROID -DARCH_IS_ARMV7 helloworld.c -o helloworld_pie_armv7-android

helloworld_loop_pie_armv7-android: helloworld_loop.c
	$(GCC) -march=armv7-a --sysroot=$(SYSR) -pie -DOS_IS_ANDROID -DARCH_IS_ARMV7 helloworld_loop.c -o helloworld_loop_pie_armv7-android

helloworld_thread_pie_armv7-android: helloworld_thread.c
	$(GCC) -march=armv7-a --sysroot=$(SYSR) -pie -DOS_IS_ANDROID -DARCH_IS_ARMV7 -std=c11 helloworld_thread.c -o helloworld_thread_pie_armv7-android

helloworld_recursion_pie_armv7-android: helloworld_recursion.c
	$(GCC) -march=armv7-a --sysroot=$(SYSR) -pie -DOS_IS_ANDROID -DARCH_IS_ARMV7 -std=c11 helloworld_recursion.c -o helloworld_recursion_pie_armv7-android

do_exception_pie_armv7-android: do_exception.c
	$(GCC) -march=armv7-a --sysroot=$(SYSR) -pie -DOS_IS_ANDROID -DARCH_IS_ARMV7 -std=c11 do_exception.c -o do_exception_pie_armv7-android

asmtest_armv7-android: asmtest_armv7-android.o
	$(LD) -m elf32-littlearm asmtest_armv7-android.o -o asmtest_armv7-android

asmtest_armv7-android.o: asmtest_armv7-android.s
	$(AS) asmtest_armv7-android.s -o asmtest_armv7-android.o

#------------------------------------------------------------------------------
# aarch64
#------------------------------------------------------------------------------
helloworld_pie_aarch64-android: helloworld.c
	$(GCC_64) --sysroot=$(SYSR_64) -pie -DOS_IS_ANDROID -DARCH_IS_AARCH64 helloworld.c -o helloworld_pie_aarch64-android

helloworld_loop_pie_aarch64-android: helloworld_loop.c
	$(GCC_64) --sysroot=$(SYSR_64) -pie -DOS_IS_ANDROID -DARCH_IS_AARCH64 helloworld_loop.c -o helloworld_loop_pie_aarch64-android

helloworld_thread_pie_aarch64-android: helloworld_thread.c
	$(GCC_64) --sysroot=$(SYSR_64) -pie -DOS_IS_ANDROID -DARCH_IS_AARCH64 -std=c11 helloworld_thread.c -o helloworld_thread_pie_aarch64-android

helloworld_recursion_pie_aarch64-android: helloworld_recursion.c
	$(GCC_64) --sysroot=$(SYSR_64) -pie -DOS_IS_ANDROID -DARCH_IS_AARCH64 -std=c11 helloworld_recursion.c -o helloworld_recursion_pie_aarch64-android

do_exception_pie_aarch64-android: do_exception.c
	$(GCC_64) --sysroot=$(SYSR_64) -pie -DOS_IS_ANDROID -DARCH_IS_AARCH64 -std=c11 do_exception.c -o do_exception_pie_aarch64-android

asmtest_aarch64-android: asmtest_aarch64-android.o
	$(LD_64) -m aarch64elf asmtest_aarch64-android.o -o asmtest_aarch64-android

asmtest_aarch64-android.o: asmtest_aarch64-android.s
	$(AS_64) asmtest_aarch64-android.s -o asmtest_aarch64-android.o
